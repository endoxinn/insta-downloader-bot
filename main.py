import os
import io
import time
import requests
from dotenv import load_dotenv
import telebot
from telebot import types
from instagrapi import Client

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

BOT_TOKEN = os.getenv('BOT_TOKEN')
INSTAGRAM_SESSIONID = os.getenv('INSTAGRAM_SESSIONID')
CHANNEL_USERNAME = '@instosaverr'

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = telebot.TeleBot(BOT_TOKEN)

# –ö—Ä–∞—Å–∏–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∏ –∫–æ–º–∞–Ω–¥—ã
bot.set_my_description(
    "üöÄ –ú–≥–Ω–æ–≤–µ–Ω–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –∏–∑ Instagram\n"
    "üé¨ –í–∏–¥–µ–æ, –§–æ—Ç–æ, –ò—Å—Ç–æ—Ä–∏–∏ ‚Äî –≤ –æ–¥–Ω–æ –∫–∞—Å–∞–Ω–∏–µ\n"
    "üí¨ –ù–∞–∂–∏–º–∞–π –Ω–∞ start –∏ –∫–∞—á–∞–π –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π!"
)

bot.set_my_commands([
    telebot.types.BotCommand("start", "üöÄ –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É"),
    telebot.types.BotCommand("help", "‚ÑπÔ∏è –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º"),
    telebot.types.BotCommand("check", "‚úÖ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É")
])

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞ Instagram
cl = Client()
cl.login_by_sessionid(INSTAGRAM_SESSIONID)

# –•—Ä–∞–Ω–∏–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_data = {}

FREE_DOWNLOADS = 3  # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –∑–∞–≥—Ä—É–∑–æ–∫

def main_menu():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add("üì• –°–∫–∞—á–∞—Ç—å", "üì¢ –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è", "‚ÑπÔ∏è –ü–æ–º–æ—â—å")
    return markup

def check_subscription(user_id):
    try:
        member = bot.get_chat_member(CHANNEL_USERNAME, user_id)
        return member.status in ['member', 'creator', 'administrator']
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏: {e}")
        return False

@bot.message_handler(commands=['start'])
def start(message):
    user_id = message.from_user.id
    if user_id not in user_data:
        user_data[user_id] = {'downloads': 0}

    bot.send_message(message.chat.id,
        "üëã –ü—Ä–∏–≤–µ—Ç!\n"
        "–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ —Å–∫–∞—á–∞—Ç—å –ø–æ—Å—Ç—ã, Reels –∏ –∏—Å—Ç–æ—Ä–∏–∏ –∏–∑ Instagram!\n\n"
        f"üì• –ë–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –∑–∞–≥—Ä—É–∑–æ–∫: {FREE_DOWNLOADS}\n"
        "–ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –Ω—É–∂–Ω–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª.",
        reply_markup=main_menu())

@bot.message_handler(commands=['help'])
def help_command(message):
    bot.send_message(message.chat.id,
        "üîπ *–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º:*\n\n"
        "1Ô∏è‚É£ –ù–∞–∂–º–∏—Ç–µ *¬´üì• –°–∫–∞—á–∞—Ç—å¬ª*.\n"
        "2Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ—Å—Ç, Reels –∏–ª–∏ –°—Ç–æ—Ä–∏—Å –∏–∑ Instagram.\n"
        "3Ô∏è‚É£ –ü–æ–ª—É—á–∏—Ç–µ –º–µ–¥–∏–∞—Ñ–∞–π–ª –ø—Ä—è–º–æ –∑–¥–µ—Å—å, –±–µ–∑ –≤–æ–¥—è–Ω—ã—Ö –∑–Ω–∞–∫–æ–≤!\n\n"
        "‚ö° *–ë–µ—Å–ø–ª–∞—Ç–Ω–æ –¥–æ—Å—Ç—É–ø–Ω—ã 3 –∑–∞–≥—Ä—É–∑–∫–∏!* –ü–æ—Å–ª–µ ‚Äî —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–¥–ø–∏—Å–∫–∞.\n\n"
        "üì¢ –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞.\n"
        f"–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è üëâ {CHANNEL_USERNAME}",
        parse_mode='Markdown',
        reply_markup=main_menu()
    )

@bot.message_handler(commands=['check'])
def check(message):
    user_id = message.from_user.id
    if check_subscription(user_id):
        bot.send_message(message.chat.id, "‚úÖ –û—Ç–ª–∏—á–Ω–æ! –í—ã –ø–æ–¥–ø–∏—Å–∞–Ω—ã, –º–æ–∂–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º!", reply_markup=main_menu())
    else:
        markup = types.InlineKeyboardMarkup()
        markup.add(types.InlineKeyboardButton("‚úÖ –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è", url=f"https://t.me/{CHANNEL_USERNAME[1:]}"))
        markup.add(types.InlineKeyboardButton("üîÑ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", callback_data="check_subscription"))
        bot.send_message(message.chat.id,
            "‚ùå –í—ã –µ—â—ë –Ω–µ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏.",
            reply_markup=markup)

@bot.callback_query_handler(func=lambda call: call.data == "check_subscription")
def callback_check_subscription(call):
    user_id = call.from_user.id
    if check_subscription(user_id):
        bot.answer_callback_query(call.id, "‚úÖ –û—Ç–ª–∏—á–Ω–æ! –í—ã –ø–æ–¥–ø–∏—Å–∞–Ω—ã!")
        bot.send_message(call.message.chat.id, "‚úÖ –í—ã –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å! –ú–æ–∂–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º!", reply_markup=main_menu())
    else:
        bot.answer_callback_query(call.id, "‚ùå –í—ã –µ—â—ë –Ω–µ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å!")
        markup = types.InlineKeyboardMarkup()
        markup.add(types.InlineKeyboardButton("‚úÖ –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è", url=f"https://t.me/{CHANNEL_USERNAME[1:]}"))
        markup.add(types.InlineKeyboardButton("üîÑ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", callback_data="check_subscription"))
        bot.send_message(call.message.chat.id,
            "‚ùå –í—ã –≤—Å—ë –µ—â—ë –Ω–µ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å. –ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª –∏ –Ω–∞–∂–º–∏—Ç–µ ¬´–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É¬ª!",
            reply_markup=markup)

@bot.message_handler(func=lambda message: True)
def handle_buttons(message):
    user_id = message.from_user.id
    text = message.text.strip()

    if user_id not in user_data:
        user_data[user_id] = {'downloads': 0}

    if text == "üì• –°–∫–∞—á–∞—Ç—å":
        bot.send_message(message.chat.id, "üìé –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ—Å—Ç, Reels –∏–ª–∏ Story!")
        return

    if text == "üì¢ –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è":
        markup = types.InlineKeyboardMarkup()
        markup.add(types.InlineKeyboardButton("‚úÖ –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è", url=f"https://t.me/{CHANNEL_USERNAME[1:]}"))
        markup.add(types.InlineKeyboardButton("üîÑ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", callback_data="check_subscription"))
        bot.send_message(message.chat.id, "–ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞!", reply_markup=markup)
        return

    if text == "‚ÑπÔ∏è –ü–æ–º–æ—â—å":
        help_command(message)
        return

    # –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç –Ω–µ –∫–Ω–æ–ø–∫–∞ ‚Äî —Å—á–∏—Ç–∞–µ–º —á—Ç–æ —ç—Ç–æ —Å—Å—ã–ª–∫–∞
    download_instagram_content(message)

def download_instagram_content(message):
    user_id = message.from_user.id

    if user_data[user_id]['downloads'] >= FREE_DOWNLOADS:
        if not check_subscription(user_id):
            markup = types.InlineKeyboardMarkup()
            markup.add(types.InlineKeyboardButton("‚úÖ –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è", url=f"https://t.me/{CHANNEL_USERNAME[1:]}"))
            markup.add(types.InlineKeyboardButton("üîÑ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", callback_data="check_subscription"))
            bot.send_message(message.chat.id,
                "‚ùå –í—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ –≤—Å–µ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –∑–∞–≥—Ä—É–∑–∫–∏!\n\n"
                "–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª –∏ –Ω–∞–∂–º–∏—Ç–µ ¬´–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É¬ª!",
                reply_markup=markup)
            return

    url = message.text.strip()
    loading_msg = bot.send_message(message.chat.id, "üîç –ó–∞–≥—Ä—É–∂–∞—é 0%...")

    try:
        bot.edit_message_text("‚è≥ –ó–∞–≥—Ä—É–∂–∞—é 25%...", chat_id=message.chat.id, message_id=loading_msg.message_id)
        media_pk = cl.media_pk_from_url(url)
        media_info = cl.media_info(media_pk)

        bot.edit_message_text("‚è≥ –ó–∞–≥—Ä—É–∂–∞—é 50%...", chat_id=message.chat.id, message_id=loading_msg.message_id)

        if '/stories/' in url:
            story = cl.story_info(media_pk)
            if story.video_url:
                send_file_from_url(story.video_url, message.chat.id, is_video=True)
            elif story.thumbnail_url:
                send_file_from_url(story.thumbnail_url, message.chat.id, is_video=False)

        elif '/reel/' in url or '/reels/' in url:
            if media_info.video_url:
                send_file_from_url(media_info.video_url, message.chat.id, is_video=True)
            else:
                bot.send_message(message.chat.id, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å Reels.")

        else:
            if media_info.media_type == 1:  # –§–æ—Ç–æ
                send_file_from_url(media_info.thumbnail_url, message.chat.id, is_video=False)

            elif media_info.media_type == 2:  # –í–∏–¥–µ–æ
                if media_info.video_url:
                    send_file_from_url(media_info.video_url, message.chat.id, is_video=True)
                else:
                    bot.send_message(message.chat.id, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ.")

            elif media_info.media_type == 8:  # –ê–ª—å–±–æ–º
                for res in media_info.resources:
                    if res.video_url:
                        send_file_from_url(res.video_url, message.chat.id, is_video=True)
                    elif res.thumbnail_url:
                        send_file_from_url(res.thumbnail_url, message.chat.id, is_video=False)

            else:
                bot.send_message(message.chat.id, "‚ùå –≠—Ç–æ—Ç —Ç–∏–ø –º–µ–¥–∏–∞ –ø–æ–∫–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è.")

        # –£—Å–ø–µ—à–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞
        user_data[user_id]['downloads'] += 1
        bot.edit_message_text("‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ!", chat_id=message.chat.id, message_id=loading_msg.message_id)

    except Exception as e:
        bot.edit_message_text(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {str(e)}", chat_id=message.chat.id, message_id=loading_msg.message_id)

    finally:
        time.sleep(2)
        try:
            bot.delete_message(chat_id=message.chat.id, message_id=loading_msg.message_id)
        except:
            pass

def send_file_from_url(file_url, chat_id, is_video=False):
    response = requests.get(file_url, timeout=10)
    file_bytes = io.BytesIO(response.content)
    file_bytes.name = 'file.mp4' if is_video else 'file.jpg'
    if is_video:
        bot.send_video(chat_id, file_bytes)
    else:
        bot.send_photo(chat_id, file_bytes)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.infinity_polling()
